(name 'LibGit-Core-MaxLeske.123' message '* fixed return code handler setup* fixed return code handler lookup* started fixing struct finalization but needs more work' id '57c75144-f21a-4281-a92a-07f55aee8be9' date '16 March 2015' time '2:52:45.438637 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.122' message '* fixed setup of return code handlers* fixed return code handler lookup* started fixing struct finalization but this needs more work' id '711bb12e-4a33-4771-b1d6-beacec941773' date '16 March 2015' time '2:42:56.697689 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.121' message '* vastly improved the way enumerations work* added missing return codes' id '017759e7-9ef4-4c1b-9a7b-5bd1aef347ff' date '15 March 2015' time '5:34:42.929022 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.120' message '* trying to fix push problems' id 'd8fdb984-51e8-4dc9-afe7-0305dd5e8bcc' date '15 March 2015' time '2:03:56.825378 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.119' message '* trying to fix push problems' id 'f5df2deb-9325-433c-aec3-b9cf9dbc8474' date '15 March 2015' time '2:01:45.557104 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.118' message '* every libgit2 callout now checks if libgit2 has been initialized and calls the initialize function if necessary. This should prevent a lot of  invalid memory problems* started cleaning up error and exit code handling* added new error codes* renamed LGitUtility to LGitGlobal* removed subclasses of LGitCallError. They were all unused* cleaned up TLGitCalloutTrait and implemented most of the logic on LGitGlobal' id '62ee47ea-a6fe-4680-a17e-86ad061e43b3' date '15 March 2015' time '1:42:31.973614 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.117' message 'fixes #22* updgraded to libgit2 v0.22.1* removed unnecessary class variables from enumerations* simplified clone and push' id '90ae0ca5-34be-4e07-bf76-ff1421ae909e' date '13 March 2015' time '3:05:30.887215 pm' author 'MaxLeske' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())