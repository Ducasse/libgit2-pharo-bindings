(name 'LibGit-Core-MaxLeske.109' message 'emergency commit' id '6c54c72d-81c1-4fbe-9d5b-0174f7efce62' date '27 February 2015' time '5:47:52.530889 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.108' message '* fixed seg faults when packing repository' id 'ef93c776-bc6d-4118-84b3-a00f010879f8' date '26 February 2015' time '7:50:32.982495 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.107' message 'fixes #14* different library names depending on platform (currently osx + linux)* fixes #13
* check NB session to see if we need to lookup the library address again, otherwise return the cached handle' id 'b16041e7-946a-4925-b6a9-125623e13851' date '24 February 2015' time '5:35:51.961363 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.106' message '* added prototypical possibility to pack (gc) a repositoryWarning: this is destructive for the repository and only works on a single reference' id '17ca9b16-858d-44f2-b850-b039c6522c63' date '22 February 2015' time '10:56:15.141869 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.105' message 'Fixes #10* fixed typo in message name* added missing #new' id 'b56389be-1644-4c6f-b5af-8dcec5be0194' date '20 February 2015' time '5:08:49.757096 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.104' message '* use optCoerceNilToNull and optStringOrNull where applicable* moved printing protocol to Trait* fixed printing of some objects' id 'e2e0d133-e057-4b8c-9286-0b0b49620524' date '15 November 2014' time '4:07:21.389794 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.103' message '* lint fixes' id 'a472226f-95a6-4165-b98f-bcfc6905ea80' date '14 November 2014' time '4:58:21.006308 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.102' message '* when setting name and e-mail fields on signature, converto to NBExternalString beforehand' id 'b1674406-4120-44d9-8bbb-3c4232998f3f' date '26 October 2014' time '10:19:33.221901 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.101' message '* workaround: the commit builder takes a references that is to be updated. A recent change to libgit2 prevents the write operation from succeeding, if the reference doesn''t exist (such as when creating the first commit on master). This workaround creates a dummy references and updates it after the write operation (very very ugly but need to wait for response from libgit2 devs)' id '67e9d6d6-7903-444b-980b-42d6fc2349dc' date '19 October 2014' time '9:29:31.784677 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.100' message '* moved tests to their own package* remember ssh credentials on LGitRemote, not on LGitTestRepository' id '8bca0a13-c82d-4c70-8369-2f95cabe218e' date '19 October 2014' time '4:00:51.97645 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.99' message '* fixed remaining test failures' id '437a2244-b74b-47eb-8eb6-d33510778270' date '19 October 2014' time '1:18:49.450624 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.98' message '* fixed remaining test failures' id '03453e1c-ca9b-40c4-ab09-e1f5dc7e946f' date '19 October 2014' time '1:04:43.07063 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.97' message '* fixed index tests* correctly update index after creating a test commit' id '383bad8a-cc42-4690-91eb-707ef28bdff4' date '19 October 2014' time '12:56:50.113776 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.96' message '* fixed some initialization issues' id '94957241-9e70-428d-bd1a-bf6304432b9b' date '19 October 2014' time '11:41:10.327845 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.95' message '* update remote tips after push* add new working tree entries to the index before pushing' id '0241fc70-3000-40e5-bed9-baf6cf7bc60b' date '6 October 2014' time '8:32:55.271543 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.94' message '* testing index' id 'cdf117fb-7353-4749-8444-b04286b86e3e' date '6 October 2014' time '8:18:53.964644 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.93' message '* fixed that annoying bug that didn''t delete entries from the git repository* fixed LGitStringArray and LGitCommitArray' id 'e12af51a-392e-407a-ad0f-7a228a9434be' date '5 October 2014' time '8:07:38.684509 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.92' message 'testing index updates' id '399818c6-b9b6-487e-b134-0a433040d99d' date '5 October 2014' time '8:03:40.731127 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.91' message 'testing deletion' id 'f74506fd-ae6e-40b3-8861-add0d9a06f81' date '5 October 2014' time '7:57:31.409564 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.90' message '* fixes commit signature access (https://github.com/theseion/LibGit/issues/5)* fixes mismatch between git_time and git_time_t* fixes problems when printing LGitTree* fixes LGitTree>>hash' id '47b801aa-ed52-4b58-b6b0-a4cade218994' date '3 October 2014' time '7:52:05.071687 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.89' message '* removed subclass responsibility for #objectPrintOn:* included Martin''s additional exit codes' id 'fbb6c941-d789-4f26-99f8-3a1d3461968c' date '23 September 2014' time '8:24:27.205143 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.88' message '' id '6c521bfc-9784-467e-9ec3-39959e62408d' date '17 September 2014' time '6:37:18.457119 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.87' message '* fixed error in LGitIndex>>addAll* added new functionality for changing remotes' id 'b3f9642a-a8d4-46f0-953c-5d720c7d05c4' date '1 September 2014' time '11:32:51.559996 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.86' message '* replaced LGitIntValue with LGitWriteBackValueInt* fixed categorization of generated methods for LGitWriteBackValue subclasses' id '9ae7b5b5-b428-4c0f-a0fe-3e946b868b00' date '31 August 2014' time '10:20:58.397043 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.85' message '* fixed LGitCommitBuilder>>writtenCommit' id '0c05a259-a883-45af-af94-625a7068f0f7' date '31 August 2014' time '7:39:53.894006 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.84' message '* more tests* better and safer printing for LGitTreeEntry* fixed #isBeingTracked test' id '2fbfd054-c8fa-4f4b-9d10-224d75a9eaef' date '31 August 2014' time '7:31:05.137077 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.83' message '* added a couple of tests* better and safer printing for core objects* added ability to walk all entries of a tree recursively' id '01b386dc-c53b-4e65-bbf0-8c4713275ebf' date '31 August 2014' time '6:12:54.869848 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.82' message '* introduced LGitCommitBuilder to abstract commit building from commit instance creationNOTE: #writtenCommit currently crashes the VM' id '6514471e-b39f-4b6e-962e-344eae58c5e9' date '31 August 2014' time '12:22:44.745885 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.81' message '* fixed problems with LGitTime and LGitSignature' id 'e42544e5-8e1e-4dad-a91d-a6d66ba6b2ad' date '30 August 2014' time '11:42:48.144211 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.80' message '* turned LGitSignature into an external structure. no more conversions necessary* return the new commit id after creating a new commit* couple of fixes' id '9ac3b7c1-80df-489b-a330-d5de2deff68c' date '30 August 2014' time '8:59:28.842574 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.79' message '* created LGitId to have a real id objecet to work with instead of converting from / to struct* added new abstract struct class' id '41322f5a-8207-4998-a536-e19a8d406015' date '28 August 2014' time '10:49:08.521514 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.78' message '* fixed pull and fast-forward' id '96d49ca1-762c-4065-b1fb-02aecc77c546' date '23 August 2014' time '11:16:56.243758 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.77' message '* stub code for automatic pulls on remote repositories' id 'ae1d4f07-e02e-44ff-9119-be4cf387e6c9' date '23 August 2014' time '11:49:25.894498 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.76' message '* fixed LGitTestRepository* fixed function signature' id '747198c7-355a-40f8-9927-1d091b3943c8' date '22 August 2014' time '1:09:56.300842 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.75' message '* adding functionality to index' id '65d8a766-edcb-4838-94ed-2be4a946c4b2' date '22 August 2014' time '11:09:37.158166 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.74' message '* added LGitIntValue for int pointers* added #isDirty to check for status on tracked files (flaky!)* (experimental) changed  #isProperRepository to open the repository from a reference within the repo* (not working) added #isBeingTracked: to find out if a file is being tracked by git (should use odb, not index)* added index object' id '0a84c73d-7e76-4a36-adaf-53f45d05ff70' date '19 August 2014' time '4:21:49.132189 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.73' message '* checking out of commits is not yet implemented in libgit2. rolled my own by checking out tree, then updating HEAD* added default signature call' id 'be5edbb3-f5f3-4b4e-bfa4-76cfb693f99c' date '18 August 2014' time '10:50:29.793403 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.72' message '* implemented checkout of branches* added checkout tests' id '9f5c69ac-e3bd-44d5-bbaf-d0dd63a828b1' date '17 August 2014' time '10:03:04.22272 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.71' message '* removed personal information from tests* moved more tests to manual test case* finally figured out how to use NBExternalArray and added new class LGitCommitArray for passing collections of arrays (commit parents)* can now save commits with arbitrary number of parents' id 'cb9e1240-2f84-43bd-a32a-a229622fa42f' date '12 August 2014' time '11:45:25.833514 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.70' message '* updated a function according to API changes* moved tests which depend on credentials to a special test class which needs to be manually enabled* fixed a few bugs' id '5356f369-786a-4642-846e-b0a36af269c2' date '11 August 2014' time '11:45:10.95786 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.69' message '* migrated all existing tests to SUnit' id '2da7d9bf-b6c2-4511-844f-5c42201f9e8d' date '11 August 2014' time '11:11:12.3098 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.68' message '* tests for reference* some refactoring for object lookup* added test methods* added a few methods to reference for better lookupProjectSpecFor: ' id '583948d2-140a-419d-9bc9-1636b44cf52d' date '11 August 2014' time '11:09:12.890372 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.67' message '* added test for tree builder' id '7ee5acd8-f7d1-40cd-bd88-bbcfdaa2e563' date '10 August 2014' time '11:39:27.191842 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.66' message '* added some comparison methods' id 'ae2dbca2-df43-49b1-aa60-fbf9015d8532' date '10 August 2014' time '11:16:32.334143 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.65' message '* added a test for commit creation* squashed a few bugs* added some convenience methods for testing* added some comparison methods' id '251ec705-359e-4a5c-bcd0-a7e60c5b8bef' date '10 August 2014' time '11:15:27.345976 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.64' message '* moved most repository tests to SUnit tests* fixed serveral problems with references and branch iteration' id '37f5485f-3cd9-4c17-aa13-2827cbec1492' date '10 August 2014' time '6:47:11.624568 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.63' message '* moved blob tests to SUnit tests* generalized blob creation from collections' id '6204f826-7c53-4172-8cd5-ccbbb6ebbc7f' date '10 August 2014' time '4:39:11.803281 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.62' message '* fixed problems with #setUp, #tearDown' id '50bae400-6147-499a-8834-af9447ef7b4a' date '10 August 2014' time '2:21:43.731866 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.61' message '* fixed problems with #setUp, #tearDown' id 'f5dc85e8-ad3b-4efe-9e8c-0f796d3bee70' date '10 August 2014' time '1:55:50.775996 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.60' message '* added BlockClosure>>asLibGitActionSequence to capture global setup and teardown (#threads_init, #threads_shutdown)* added #threads_init and #threads_shutdown calls to #setUp and #tearDown of tests' id '95490822-8ab1-4395-a2de-63245c8cde96' date '10 August 2014' time '1:25:42.801544 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MartinDias.59' message '* DEBUGGING: Jenkins raises an error that is not reproduced in my mac' id '66f920a4-2e8c-43cc-af88-ea585c6ae763' date '8 June 2014' time '7:10:22.012765 pm' author 'MartinDias' ancestors ((name 'LibGit-Core-MartinDias.58' message '* Added tests to check that git external objects are garbage collected properly.* Changed #resourceData to answer the NB handle instead of the git external object itself. This is like it is implemented in other NB user (Cairo). It was nicer that way but there was a leak because of the NB executor (something like that) that *strongly* points to the resourceData.' id '8691e538-eba7-4e7e-8b47-485180add0e0' date '20 May 2014' time '8:30:48.356183 pm' author 'MartinDias' ancestors ((name 'LibGit-Core-MartinDias.57' message '* Fixed test for blog creation from file, added in my previous version.' id 'df17ee3c-f5e8-4c51-95e7-15f579188bd2' date '20 May 2014' time '7:49:22.556329 pm' author 'MartinDias' ancestors ((name 'LibGit-Core-MartinDias.56' message '* Added LGitBlobTest with two cases' id 'a424b554-5e2f-4f55-830d-bde3e1626bf9' date '20 May 2014' time '6:29:37.278672 pm' author 'MartinDias' ancestors ((name 'LibGit-Core-MartinDias.55' message '* Added LGitBlob>>newFromString:of: , which uses libgit''s "git_blob_create_frombuffer" function to create a blob from a memory buffer. This way there is no need to create a real file in the file system to create blob. Since this is my first contribution to the project and I''m also new in NB, I tried to follow the pattern of LGitBlob>>newFromFile:of:.' id '9a78ae18-fa79-4794-80a1-5d7263291dbb' date '12 May 2014' time '2:29:33.439476 pm' author 'MartinDias' ancestors ((name 'LibGit-Core-MaxLeske.54' message '* more test refectorings* removed hard coded credentials* added convenience cloning to LGitTestRepository* better regex for LGitRefSpec* created hiearchy for credential types* refactored LGitPush* prevent tests from being run twice by debugging action' id 'd4389b2f-4d1b-465b-8eeb-8d7cc5d63bcf' date '21 April 2014' time '11:01:50.893437 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.53' message '* ssh clone test working again after refactoring' id 'f5ced140-776f-4c3c-a439-8bb9317c9bb2' date '20 April 2014' time '10:17:32.856655 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.52' message '* test cleanup* created dedicated objects for credentials, callbacks and rfspecs' id 'f3571425-7da6-4c98-b44e-579326bc8dc1' date '20 April 2014' time '6:04:15.328684 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.51' message '* test cleanup* get last error from libgit2 in exceptions* moved callouts to trait' id '4fb1760f-2796-48fa-b8da-52886d1c446e' date '14 April 2014' time '1:05:45.320843 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.50' message '* started cleaning up tests' id 'cb03661c-e023-4a85-b56c-e2a12ca53889' date '8 April 2014' time '10:14:11.847235 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.49' message '* clone and push via SSH now working' id '44283b57-0bed-418f-8c84-89538500533f' date '8 April 2014' time '7:34:14.567835 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.48' message '* a bit of refactoring' id 'e81591d5-a757-44d2-8773-16165c984935' date '23 March 2014' time '10:57:20.865665 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.47' message '* nearly have clone / push via ssh working' id 'b4b2d35e-9581-4d05-bdf5-18598a1288d0' date '22 March 2014' time '8:52:46.13037 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.46' message '* push via https works :)' id '83e079d7-484e-4501-8309-84cced60b7c7' date '20 March 2014' time '6:19:28.555561 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.45' message '* nearly have push working' id '2580041e-f702-4741-b3d5-1ec317e06378' date '20 March 2014' time '4:12:18.909672 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.44' message '* started implementing push' id 'd370e6bb-6f91-4a5e-a988-3f78f8513824' date '19 March 2014' time '6:08:02.935895 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.43' message '* fixed class hierarchy of enums' id '76884bb6-dfa2-4877-9ca6-07f495398296' date '19 March 2014' time '2:58:59.543998 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.41' message '* got clone working* use different remote creation function to update FETCH_HEAD' id '12904c9b-af66-4f8e-83d8-9124f0d8dfa8' date '19 March 2014' time '2:12:36.373947 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.40' message '* fixed #isProperRepository' id 'db86a706-23db-4003-8053-6e4dff54a395' date '19 March 2014' time '11:14:53.663935 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-StefanMarr.39' message 'Rewrote FreshRepository test with plain SUnit' id '407c5664-fd89-4759-bf59-8b4127cfae1b' date '18 March 2014' time '7:37:51.277269 pm' author 'StefanMarr' ancestors ((name 'LibGit-Core-MaxLeske.38' message '* added dedicated remote object* added test case for fetching a remote' id '664d4996-85d2-4958-aed5-8d27ba0f026d' date '18 March 2014' time '6:59:36.313796 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.37' message '* restructured tests* got commits working' id 'fe972cb8-e62f-4ffd-ae59-4033bf95a152' date '18 March 2014' time '5:09:30.357601 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.36' message '* made commit test work' id 'c9aa8a64-f8f5-4d2e-a17e-9e3593eae48f' date '17 March 2014' time '10:41:21.100844 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.35' message '* fixed return code handler setup* removed more pool dictionary references' id 'f59e70e7-85dd-4307-a339-94224c31b0c3' date '17 March 2014' time '5:35:50.968896 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.34' message '* still cleaning up migration from pool dictionaries' id 'fde7d50d-88b0-495d-9197-fccabed0ad95' date '17 March 2014' time '4:26:27.553971 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.33' message '* moved from pool dictionaries to real classes' id 'eaa12d79-ed6b-42b4-af16-214d96b7e2cb' date '17 March 2014' time '4:00:22.971529 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.32' message '* fixed dependencies* fixed initialization' id '5ce04af6-ef61-40dd-8299-672ecf094a2b' date '17 March 2014' time '3:21:54.415007 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.31' message '* migrating SharedPool subclasses to be normal classes' id '89225dbd-dad5-4987-a8b9-6fd52c727b75' date '17 March 2014' time '2:36:27.779765 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.30' message '* fixed all tests that used to work originally' id '3154e920-06e6-49e1-8bab-d4116edcb25d' date '17 March 2014' time '1:52:07.737425 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.29' message '* fixed branch iterator' id 'bbd82f0e-2c86-4fa0-9f15-389d6e5555dd' date '17 March 2014' time '1:18:36.121973 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.28' message '* fixed more tests' id 'cacc8d18-49a5-418f-9bf3-c03c70a03db4' date '17 March 2014' time '10:56:09.811283 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.27' message '* more fixed tests' id '1709999a-46a6-4693-b4bf-cc5667bba4f1' date '17 March 2014' time '8:51:47.654261 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.26' message '* fixed a lot of tests' id '538a7718-5e48-4f85-9082-609110edb879' date '17 March 2014' time '1:02:23.478334 am' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.25' message '* cleanup for v0.20 bindings' id '7f37198c-6595-403c-a460-cd8857c9dda7' date '14 March 2014' time '1:28:32.519667 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.24' message '* cleanup for v0.20 bindings' id 'c98a7bd2-ff2d-4e1f-a796-f952dcb46ba0' date '14 March 2014' time '1:14:11.397687 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-msf.23' message '* fixed obsolete references' id '584edb99-187e-4a28-b2d5-da8f3032e12e' date '14 March 2014' time '11:23:26.374901 am' author 'msf' ancestors ((name 'LibGit-Core-MaxLeske.22' message 'empty log message' id 'e349d44d-006c-4040-9d72-3711c629097f' date '13 March 2014' time '1:08:40.797 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.21' message '' id 'c5c54cb3-a2b6-48a6-aa78-c16dfc28a216' date '13 March 2014' time '1:01:30.63 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.20' message '* changed class type struct class' id '617174a8-0c65-45a0-8c44-dffe2642a27e' date '13 March 2014' time '12:59:00.205 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.17' message '' id 'f1f25b67-5b4c-4666-83f4-1f041238d349' date '30 June 2013' time '7:31:12.326 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.16' message '* implemented a message based return code handling mechanism (no conditionals) for LibGit function calls. Funtions can now be called as follows to handle return codes. If the returned value is not a return code object then the original value will be answered. 	self withReturnHandlerDo: [ self callMyFunction ]' id '80cbfde6-d5cb-4b3e-af7e-e9f4d2803d09' date '30 June 2013' time '6:03:48.322 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.15' message '* started moving function calls to the calling objects. Placing them there is more flexible (e.g. can use "self" in function spec and use the same definition in all subclasses)* starting over with calls, starting with repository. Need to close all memory leaks and have a clean implementation before proceeding with commit / tree creation' id '3867eb49-6321-4150-ba2f-125698b41716' date '23 June 2013' time '10:20:44.625 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.14' message 'buggy, mainly to save progress on creating commits* creating commits works but can''t be fully parameterized yet' id '90abed57-e61d-4a7b-a4c3-4685e9b49157' date '12 May 2013' time '12:04:36.737 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.13' message '* trying a more OO approach* added more behavior* new tests' id '2a3092be-e5d2-49a4-85aa-50f181256713' date '8 May 2013' time '11:49:48.713 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-MaxLeske.12' message '* LGitObject hierarchy now inherits from NBExternalObject. That enables us to write functions using the class names directly, plus no extra handle management* added more dedicated objects / extended hierarchies* startet adding exceptions* started implementing commit logic* started implementing LGitTreeBuilder* added more test cases' id 'fcc67f8a-179d-46c0-a6eb-848f726439d8' date '5 May 2013' time '11:46:17.796 pm' author 'MaxLeske' ancestors ((name 'LibGit-Core-StefanMarr.11' message 'Added support for getting the 40 character formated SHA-1 hash of a git object.- also changed the return type of #repository_open: to be git_return_t for proper enum support' id 'e6cc5a00-9f85-49d7-b06f-b8a9d92d4856' date '13 February 2013' time '11:18:01.134 pm' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.10' message 'Started implementing repository cloning.Cloning is functional for simple git:// repos, progress callbacks still crash the VM, but without them the operation is successful.- added many (not all) structs and callback definitions for cloning operation- added LGitRepositoryCloneRequest- added todo tests for test coverage (brances)' id '231eba2c-fcd7-4e7c-99a3-bffff00167ba' date '6 February 2013' time '2:03:39.543 am' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.9' message 'Renamed LGitRepositoryFFI to LGitFFI.- added basic comment to class, and removed one broken method' id 'e4c9a541-7c79-4d93-b941-ab215d7bee92' date '4 February 2013' time '10:44:20.965 pm' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.8' message 'Added support for retrieving parents of a commit.- removed ffi function that''s not exposed in binary of libgit2' id '01562633-bf71-4605-90be-16acec8dd1c0' date '4 February 2013' time '10:33:32.553 pm' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.7' message 'Improving API coverage for tree entries- added traversal operations- categorized methods- refactored git objects to have reference to the repo instead of only its handle- more consistently use #privHandle to access handles' id 'e0c7617c-a2d7-4bda-b105-1237c47165ad' date '3 February 2013' time '9:43:04.237 pm' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.6' message 'Finished implementation of traversal from repository root to actual blob content.- added example of how to traverse the git repo step by step to obtain the content of a versioned file- made almost all things LGitObjects, mostly for the common initialization, and later finalization (should look into that)- added tests for LGitCommit' id '28b9fade-2808-4a18-8341-33c419f44593' date '1 February 2013' time '2:01:53.121 am' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.5' message 'Use NBExternalString to get string handling correct.- also added git_otype mapping for enum type' id 'd0f877df-4ccb-447b-8fe5-10ff9db5b003' date '30 January 2013' time '10:52:39.527 am' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.4' message 'Added missing initializes for Enums' id 'c15ece43-57e0-433c-a63e-8b4211fd2d74' date '30 January 2013' time '1:42:34.245 am' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.3' message 'Completed querying for branches.- use NBExternalAddress consistently for char* arguments, looks like passing strings directly does not guarantee null termination- added generic #lookup: for reference names- added #lookupBranch: by name' id '942650d4-1ee6-4e9b-9950-8d4fc669ab46' date '30 January 2013' time '12:20:19.209 am' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.2' message 'Expand FFI support for repository and references.Added initial set of tests.' id '966b7c21-5c3e-46e9-b6b6-13a0cc36acad' date '29 January 2013' time '1:14:48.79 am' author 'StefanMarr' ancestors ((name 'LibGit-Core-StefanMarr.1' message 'Initial commit of LibGit.LibGit is a Smalltalk wrapper for the LibGit2 library.It is currently a small prototype building on NativeBoostFFI. The FFI bindings were sketched by TalkFFI and manually changed to a more minimal and simple approach.' id '4ac06e0c-0f2c-495e-a9ab-eb4d0e52f505' date '28 January 2013' time '7:18:52.192 pm' author 'StefanMarr' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())